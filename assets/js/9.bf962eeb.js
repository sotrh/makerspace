(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{202:function(t,a,s){t.exports=s.p+"assets/img/temp-wrapping.91574920.png"},203:function(t,a,s){t.exports=s.p+"assets/img/temp.02d50408.png"},254:function(t,a,s){"use strict";s.r(a);var e=s(0),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"getting-the-forecast"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#getting-the-forecast","aria-hidden":"true"}},[t._v("#")]),t._v(" Getting the forecast")]),t._v(" "),e("p",[t._v("In order to get the forecast data from the internet, we first need to tell Android that we want to use the internet. We need to add a new permission to the "),e("code",[t._v("AndroidManifest.xml")]),t._v(".")]),t._v(" "),e("div",{staticClass:"language-xml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-xml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token prolog"}},[t._v('<?xml version="1.0" encoding="utf-8"?>')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("manifest")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("xmlns:")]),t._v("android")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://schemas.android.com/apk/res/android"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("package")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("com.example.weatherapp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("uses-permission")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("name")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("android.permission.ACCESS_COARSE_LOCATION"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- NEW! --\x3e")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("uses-permission")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("name")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("android.permission.INTERNET"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- ... --\x3e")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("manifest")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),e("h2",{attrs:{id:"openweather-api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#openweather-api","aria-hidden":"true"}},[t._v("#")]),t._v(" OpenWeather API")]),t._v(" "),e("p",[t._v("An "),e("a",{attrs:{href:"https://en.wikipedia.org/wiki/Application_programming_interface",target:"_blank",rel:"noopener noreferrer"}},[t._v("API"),e("OutboundLink")],1),t._v(" stands for Application Programming Interface. People and companies make API's to allow others (and also themselves) to access their data in a more secure manner.")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://openweathermap.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("openweathermap.org"),e("OutboundLink")],1),t._v(" offers an API that's free to use (so long as we don't use it too much). We can find it at "),e("a",{attrs:{href:"https://openweathermap.org/api",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://openweathermap.org/api"),e("OutboundLink")],1),t._v(". Follow their "),e("a",{attrs:{href:"https://openweathermap.org/appid",target:"_blank",rel:"noopener noreferrer"}},[t._v("guide"),e("OutboundLink")],1),t._v(" to create an account, and get an API key. Then subscribe to the "),e("code",[t._v("One Call Api")]),t._v(" on the "),e("a",{attrs:{href:"https://openweathermap.org/api",target:"_blank",rel:"noopener noreferrer"}},[t._v("api list"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("p",[t._v("The API key they give you will serve as identification when we ask the "),e("code",[t._v("openweathermap.org")]),t._v(" for the forecast. We're going to need to store it to use it in our application. Create a new file called "),e("code",[t._v("Secrets.kt")]),t._v(" (no class).")]),t._v(" "),e("div",{staticClass:"warning"},[e("p",[t._v("If you've set up Git integration, Android Studio will ask if you want to add this file to the repository. This is one of those times where you might "),e("strong",[t._v("not")]),t._v(" want it added.")]),t._v(" "),e("p",[t._v("Secrets are meant to be secret. If your repository is "),e("em",[t._v("private")]),t._v(", then it should be no big deal if you add "),e("code",[t._v("Secrets.kt")]),t._v(" to git. However, if you ever want to make the repo "),e("em",[t._v("public")]),t._v(", you'll have to remove the file from git "),e("strong",[t._v("and")]),t._v(" reset all your API keys and whatever other secret data you included.")]),t._v(" "),e("p",[t._v("If you reject adding the file to Git, the filename will remain read. If you want it to stop being red you can right click the file and go to "),e("code",[t._v("Git | Add to .gitignore | app/.gitignore")]),t._v(".")])]),t._v(" "),e("p",[t._v("In "),e("code",[t._v("Secrets.kt")]),t._v(" add a constant for the API key.")]),t._v(" "),e("div",{staticClass:"language-kotlin extra-class"},[e("pre",{pre:!0,attrs:{class:"language-kotlin"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" com"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("example"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("weatherapp\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" WEATHER_API_KEY "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"YOUR API KEY HERE"')]),t._v("\n")])])]),e("p",[t._v("We'll use this value soon.")]),t._v(" "),e("h2",{attrs:{id:"getting-data-from-an-api-retrofit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#getting-data-from-an-api-retrofit","aria-hidden":"true"}},[t._v("#")]),t._v(" Getting data from an API (Retrofit)")]),t._v(" "),e("p",[t._v("Now we need some way to access data on the internet. There are many solutions to this problem, but we are going to use a library called "),e("a",{attrs:{href:"https://square.github.io/retrofit/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Retrofit"),e("OutboundLink")],1),t._v(". We're going to add some new dependencies to our "),e("code",[t._v("build.gradle")]),t._v(".")]),t._v(" "),e("div",{staticClass:"language-groovy extra-class"},[e("pre",{pre:!0,attrs:{class:"language-groovy"}},[e("code",[t._v("dependencies "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Retrofit")]),t._v("\n    implementation "),e("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"com.squareup.retrofit2:retrofit:2.5.0"')]),t._v("\n    implementation "),e("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"com.squareup.retrofit2:converter-gson:2.5.0"')]),t._v("\n    implementation "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("We're going to be using "),e("a",{attrs:{href:"https://kotlinlang.org/docs/reference/coroutines/coroutines-guide.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("coroutines"),e("OutboundLink")],1),t._v(" to make our job simpler, so we'll some more dependencies.")]),t._v(" "),e("div",{staticClass:"language-groovy extra-class"},[e("pre",{pre:!0,attrs:{class:"language-groovy"}},[e("code",[t._v("dependencies "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Kotlin coroutines")]),t._v("\n    implementation "),e("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1"')]),t._v("\n    implementation "),e("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.1"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("Once your project's synced, it's time to get into the code. Create a new Kotlin file called "),e("code",[t._v("WeatherApi")]),t._v(". It will contain an "),e("code",[t._v("interface")]),t._v(" also called "),e("code",[t._v("WeatherApi")]),t._v(".")]),t._v(" "),e("div",{staticClass:"language-kotlin extra-class"},[e("pre",{pre:!0,attrs:{class:"language-kotlin"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" com"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("example"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("weatherapp\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" WeatherApi "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("We're going to use "),e("a",{attrs:{href:"https://kotlinlang.org/docs/reference/annotations.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("annotations"),e("OutboundLink")],1),t._v(" that "),e("code",[t._v("Retrofit")]),t._v(" provides on a method called "),e("code",[t._v("getForecast()")]),t._v(" to tell "),e("code",[t._v("Retrofit")]),t._v(" how to access the OpenWeather API.")]),t._v(" "),e("div",{staticClass:"language-kotlin extra-class"},[e("pre",{pre:!0,attrs:{class:"language-kotlin"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" kotlinx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("coroutines"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Deferred\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" retrofit2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("http"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GET\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" retrofit2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("http"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Query\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" WeatherApi "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Tell Retrofit where to get the data")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token annotation builtin"}},[t._v("@GET")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"data/2.5/onecall?appid='),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("${")]),t._v("WEATHER_API_KEY"),e("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("}")])]),t._v('&exclude=hourly,minutely"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getForecast")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The parameters in the function will be used as")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// query parameters in the resulting url")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token annotation builtin"}},[t._v("@Query")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lat"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" lat"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Double"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token annotation builtin"}},[t._v("@Query")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lon"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" lon"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Double"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// This controls what units the temperature will be in:")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// * Farenheit")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// * Celcius")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// * Kelvin (the default)")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// We\'re specifying "imperial" to use Farenheit')]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token annotation builtin"}},[t._v("@Query")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"units"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" units"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"imperial"')]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// We want to use coroutines, so we use Deferred here")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Deferred"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ForecastData"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("The "),e("code",[t._v("ForecastData")]),t._v(" class hasn't been created yet. Let's do that now.")]),t._v(" "),e("div",{staticClass:"language-kotlin extra-class"},[e("pre",{pre:!0,attrs:{class:"language-kotlin"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" WeatherApi "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NEW!")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("data")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ForecastData")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" lat"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Double"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" lon"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Double"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" timezone"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" current"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ForecastDetails\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NEW!")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("data")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ForecastDetails")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" dt"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Long"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" temp"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Double"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" feels_like"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Double"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" weather"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("WeatherData"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NEW!")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("data")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("WeatherData")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" id"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Int"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" main"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" description"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" icon"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("div",{staticClass:"note"},[e("p",[t._v("These classes are based on the JSON returned by "),e("a",{attrs:{href:"https://openweathermap.org/api/one-call-api",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://openweathermap.org/api/one-call-api"),e("OutboundLink")],1),t._v(". I've left out a lot of fields that the JSON provides. We currently only really need the ones I've specified.")])]),t._v(" "),e("p",[t._v("All we've done is specify the structure of our API. Now we need to use Retrofit to create it. We only want to create the API once, so we'll use an "),e("code",[t._v("object")]),t._v(" to do that. We'll use "),e("code",[t._v("WeatherApi")]),t._v("'s "),e("code",[t._v("companion object")]),t._v(" just to keep things simple.")]),t._v(" "),e("div",{staticClass:"language-kotlin extra-class"},[e("pre",{pre:!0,attrs:{class:"language-kotlin"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" com"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jakewharton"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("retrofit2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("adapter"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("kotlin"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("coroutines"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CoroutineCallAdapterFactory\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" retrofit2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("converter"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gson"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GsonConverterFactory\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" WeatherApi "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("companion")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("object")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Start building Retrofit")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" retrofit "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Retrofit"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Builder")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Retrofit requires a baseUrl")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("baseUrl")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://api.openweathermap.org/"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// This will convert the JSON blob we get")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// from OpenWeatherMap into ")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("addConverterFactory")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GsonConverterFactory"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// This allows our getForecast() method")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// to return Deferred<*>. Normally it would")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// expect Retrofit's Call<*> class.")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("addCallAdapterFactory")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("CoroutineCallAdapterFactory")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Finish the build process")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("build")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create the actual service using our WeatherApi")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// interface.")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" service"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" WeatherApi "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" retrofit"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("WeatherApi"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("java"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h2",{attrs:{id:"using-weatherapi"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#using-weatherapi","aria-hidden":"true"}},[t._v("#")]),t._v(" Using WeatherApi")]),t._v(" "),e("p",[t._v("Now that we've created a service with Retrofit, it's time to us it. Fortunately the only change we need to make is in "),e("code",[t._v("WeatherViewModel")]),t._v(".")]),t._v(" "),e("div",{staticClass:"language-kotlin extra-class"},[e("pre",{pre:!0,attrs:{class:"language-kotlin"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" androidx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lifecycle"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("viewModelScope\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" kotlinx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("coroutines"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Dispatchers\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" kotlinx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("coroutines"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("launch\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" kotlinx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("coroutines"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("withContext\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" WeatherViewModel"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ViewModel")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getForecast")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("latitude"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Double"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" longitude"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Double"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" LiveData"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("WeatherModel"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" MutableLiveData"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("WeatherModel"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// UPDATED!")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Tells Android to launch a coroutine that will")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// be canceled if the app is destroyed")]),t._v("\n        viewModelScope"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("launch")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Switch to an IO context. Make web requests")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// on the UI thread will cause the app to")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// crash.")]),t._v("\n            result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("withContext")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Dispatchers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("IO"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" forecast "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" WeatherApi"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("service\n                    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The .await() bit is important. A")]),t._v("\n                    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Deferred object needs to be awaited")]),t._v("\n                    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// before we can get any value from it.")]),t._v("\n                    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// This is because the value has not ")]),t._v("\n                    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// been retrieved yet because it's")]),t._v("\n                    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// coming from the internet.")]),t._v("\n                    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getForecast")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("latitude"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" longitude"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("await")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n                "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The last value in a lambda will be")]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the return value. This is what")]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// `result.value` will be set to.")]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("WeatherModel")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("forecast"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("current"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("temp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("That should be everything. You should be seeing the current temperature in your location.")]),t._v(" "),e("p",[e("img",{attrs:{src:s(202),alt:""}})]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("F")]),t._v(" being on the next line is annoying. We can fix that by making the text smaller, or you can format the text so it only includes one decimal place. I chose to do the latter.")]),t._v(" "),e("div",{staticClass:"language-kotlin extra-class"},[e("pre",{pre:!0,attrs:{class:"language-kotlin"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLocation")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    fusedLocationProviderClient"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastLocation\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("addOnSuccessListener")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" location "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" viewModel"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" WeatherViewModel "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("viewModels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            viewModel"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getForecast")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("location"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("latitude"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" location"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("longitude"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("observe")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Observer "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" forecast "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("\n                    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// UPDATED!")]),t._v("\n                    temperatureText"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%.1f° F"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("format")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("forecast"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("temperature"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("addOnFailureListener")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            Toast"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeText")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Unable to retrieve users location"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Toast"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LENGTH_SHORT"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("show")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"note"},[e("p",[t._v("I'm using "),e("a",{attrs:{href:"https://www.cplusplus.com/reference/cstdio/printf/",target:"_blank",rel:"noopener noreferrer"}},[t._v("printf style formatting"),e("OutboundLink")],1),t._v(". A "),e("code",[t._v("%f")]),t._v(" means put a float (or double in our case) here. "),e("code",[t._v("%.1f")]),t._v(" means put a float here with one number after the decimal point.")])]),t._v(" "),e("p",[e("img",{attrs:{src:s(203),alt:""}})])])}),[],!1,null,null,null);a.default=n.exports}}]);