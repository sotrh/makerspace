(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{266:function(e,a,t){"use strict";t.r(a);var r=t(0),s=Object(r.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"kotlin-types"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kotlin-types","aria-hidden":"true"}},[e._v("#")]),e._v(" Kotlin Types")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Data_type",target:"_blank",rel:"noopener noreferrer"}},[e._v("Types"),t("OutboundLink")],1),e._v(" represent the ways in which data can be stored. There a many basic types that come with Kotlin out of the box. There are others created by other people. You can even create your own!")]),e._v(" "),t("h2",{attrs:{id:"creating-a-variable"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-variable","aria-hidden":"true"}},[e._v("#")]),e._v(" Creating a variable")]),e._v(" "),t("p",[e._v("Variables allow us to store and manipulate data. You'll use them a lot when righting code. The syntax for creating a variable is as follows.")]),e._v(" "),t("div",{staticClass:"language-kotlin extra-class"},[t("pre",{pre:!0,attrs:{class:"language-kotlin"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" variableName"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" String "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"variableValue"')]),e._v("\n")])])]),t("p",[e._v("This line creates a variable of type "),t("code",[e._v("String")]),e._v(" (we'll talk about "),t("code",[e._v("String")]),e._v(" in a bit). The "),t("code",[e._v("=")]),e._v(" tells Kotlin to store the thing on the right into the thing on the left. The "),t("code",[e._v('"variableValue"')]),e._v(" bit is a "),t("code",[e._v("String")]),e._v(" value that gets stored inside the newly created "),t("code",[e._v("variableName")]),e._v(".")]),e._v(" "),t("p",[e._v("We can read this as: Create a new variable named "),t("code",[e._v("variableName")]),e._v(" of type "),t("code",[e._v("String")]),e._v(" and set that "),t("code",[e._v("=")]),e._v(" to the "),t("code",[e._v("String")]),e._v(", "),t("code",[e._v('"variableValue"')]),e._v(".")]),e._v(" "),t("p",[e._v("If we don't want to specify a value when we create a variable we can use the following.")]),e._v(" "),t("div",{staticClass:"language-kotlin extra-class"},[t("pre",{pre:!0,attrs:{class:"language-kotlin"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" variableName"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" String\n")])])]),t("p",[e._v("If we don't want to specify the variables type, we have to specify a value.")]),e._v(" "),t("div",{staticClass:"language-kotlin extra-class"},[t("pre",{pre:!0,attrs:{class:"language-kotlin"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" variableName "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"variableValue"')]),e._v("\n")])])]),t("p",[e._v("Now that we can create variables, let's go over some of the most common types.")]),e._v(" "),t("h2",{attrs:{id:"numbers"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#numbers","aria-hidden":"true"}},[e._v("#")]),e._v(" Numbers")]),e._v(" "),t("p",[e._v("Numbers come up a lot in programming, and Kotlin is no different. There are 2 different types of numbers in most programming lanuages "),t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Integer",target:"_blank",rel:"noopener noreferrer"}},[e._v("integers"),t("OutboundLink")],1),e._v(", and "),t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Floating-point_arithmetic",target:"_blank",rel:"noopener noreferrer"}},[e._v("floating-point numbers"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("h3",{attrs:{id:"integers"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#integers","aria-hidden":"true"}},[e._v("#")]),e._v(" Integers")]),e._v(" "),t("p",[e._v("The most common integer type you'll see is "),t("code",[e._v("Int")]),e._v(". Int can be a positive or negative whole number.")]),e._v(" "),t("div",{staticClass:"language-kotlin extra-class"},[t("pre",{pre:!0,attrs:{class:"language-kotlin"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" daysInAWeek"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" Int "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("7")]),e._v("\n")])])]),t("p",[e._v("An "),t("code",[e._v("Int")]),e._v(" is 32 bit, meaning it takes up 4 bytes of memory (aka. RAM). There is a larger integer type called "),t("code",[e._v("Long")]),e._v(" which takes up 64 bits/8 bytes. There's a smaller variant called "),t("code",[e._v("Short")]),e._v(" which is 16 bits/2 bytes.")]),e._v(" "),t("p",[e._v("You'll generally use "),t("code",[e._v("Int")]),e._v(", but it's good to know the others are available.")]),e._v(" "),t("h3",{attrs:{id:"floating-point-numbers"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#floating-point-numbers","aria-hidden":"true"}},[e._v("#")]),e._v(" Floating-point numbers")]),e._v(" "),t("p",[e._v("The default floating-point type in Kotlin is "),t("code",[e._v("Double")]),e._v(". A "),t("code",[e._v("Double")]),e._v(" is a double-precision floating-point number. It is twice as big as it's sister type "),t("code",[e._v("Float")]),e._v(". It can store numbers with fractional parts (aka. decimal numbers).")]),e._v(" "),t("div",{staticClass:"language-kotlin extra-class"},[t("pre",{pre:!0,attrs:{class:"language-kotlin"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" pi"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" Double "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("3.14159")]),e._v("\n")])])]),t("p",[e._v("If you want to use "),t("code",[e._v("Float")]),e._v(", you'll need to add an "),t("code",[e._v("f")]),e._v(" to the end of the number.")]),e._v(" "),t("div",{staticClass:"language-kotlin extra-class"},[t("pre",{pre:!0,attrs:{class:"language-kotlin"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" pi"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" Float "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("3.14159f")]),e._v("\n")])])]),t("p",[e._v("This is because a "),t("code",[e._v("Double")]),e._v(" is bigger than a "),t("code",[e._v("Float")]),e._v(", and therefore can't fit.")]),e._v(" "),t("h2",{attrs:{id:"boolean"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#boolean","aria-hidden":"true"}},[e._v("#")]),e._v(" Boolean")]),e._v(" "),t("p",[e._v("The "),t("code",[e._v("Boolean")]),e._v(" type represents a "),t("code",[e._v("true")]),e._v(" or "),t("code",[e._v("false")]),e._v(" value. These are the "),t("strong",[e._v("only")]),e._v(" values a "),t("code",[e._v("Boolean")]),e._v(" variable can have. We'll learn more about them when we talk about "),t("router-link",{attrs:{to:"/kotlin/operators/"}},[e._v("manipulating variables")])],1),e._v(" "),t("div",{staticClass:"language-kotlin extra-class"},[t("pre",{pre:!0,attrs:{class:"language-kotlin"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" truthy"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" Boolean "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" falsy"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" Boolean "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),e._v("\n")])])]),t("h2",{attrs:{id:"string"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#string","aria-hidden":"true"}},[e._v("#")]),e._v(" String")]),e._v(" "),t("p",[e._v("We saw the "),t("code",[e._v("String")]),e._v(" type earlier. A "),t("code",[e._v("String")]),e._v(" represents a piece of text, or in other words, a "),t("code",[e._v("String")]),e._v(" of characters.")]),e._v(" "),t("div",{staticClass:"language-kotlin extra-class"},[t("pre",{pre:!0,attrs:{class:"language-kotlin"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" hello"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" String "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Hello, World!"')]),e._v("\n")])])]),t("h3",{attrs:{id:"char"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#char","aria-hidden":"true"}},[e._v("#")]),e._v(" Char")]),e._v(" "),t("p",[e._v("A "),t("code",[e._v("Char")]),e._v(" represents a single character in a "),t("code",[e._v("String")]),e._v(". The values that you can store in these are listed in the "),t("a",{attrs:{href:"https://www.ascii-code.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("ASCII table"),t("OutboundLink")],1),e._v(". We can store a "),t("code",[e._v("Char")]),e._v(" value using a single character between single quotes.")]),e._v(" "),t("div",{staticClass:"language-kotlin extra-class"},[t("pre",{pre:!0,attrs:{class:"language-kotlin"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" at_symbol"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" Char "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'@'")]),e._v("\n")])])]),t("h3",{attrs:{id:"unit"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#unit","aria-hidden":"true"}},[e._v("#")]),e._v(" Unit")]),e._v(" "),t("p",[e._v("This is the type for things that have no value. You won't see it on variables at all, but we'll get into it when we talk about "),t("router-link",{attrs:{to:"/kotlin/functions/"}},[e._v("functions")]),e._v(".")],1),e._v(" "),t("h2",{attrs:{id:"val-vs-var"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#val-vs-var","aria-hidden":"true"}},[e._v("#")]),e._v(" val vs var")]),e._v(" "),t("p",[e._v("We've been creating our variables using "),t("code",[e._v("var")]),e._v(" up to this point, but there's another keyword we can use: "),t("code",[e._v("val")]),e._v(". Creating a variable with "),t("code",[e._v("val")]),e._v(" removes our ability to change it. This means the following code will not compile.")]),e._v(" "),t("div",{staticClass:"language-kotlin extra-class"},[t("pre",{pre:!0,attrs:{class:"language-kotlin"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("val")]),e._v(" pi "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("3.1415")]),e._v("\npi "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Won't compile")]),e._v("\n")])])]),t("p",[e._v("Generally it's a good idea to "),t("em",[e._v("start")]),e._v(" with a "),t("code",[e._v("val")]),e._v(", and change it to a "),t("code",[e._v("var")]),e._v(" if you need the variable to, well, vary. We you know that you "),t("em",[e._v("definitely")]),e._v(" don't want the value to change, use "),t("code",[e._v("val")]),e._v(".")])])}),[],!1,null,null,null);a.default=s.exports}}]);